#!/usr/bin/env python
#
#    Copyright 2012, Jose Ignacio Galarza <igalarzab@gmail.com>.
#
#    This file is part of savi2mkv.
#
#    savi2mkv is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    savi2mkv is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with savi2mkv.  If not, see <http://www.gnu.org/licenses/>.
#

import logging
from optparse import OptionParser, OptionGroup
import sys


# Global information
__uname__ = 'savi2mkv'
__long_name__ = 'Simple AVI to MKV converter'
__version__ = '0.1dev'
__author__ = 'Jose Ignacio Galarza'
__email__ = 'igalarzab@gmail.com'
__url__ = 'http://github.com/igalarzab/savi2mkv'
__license__ = 'GNU/GPLv3'


def show_authors(*args, **kwargs):
    'Show authors'
    print('%s v%s, %s' % (__name__, __version__, __long_name__))
    print('%s <%s>' % (__author__, __email__))
    print(__license__)
    sys.exit(0)


def shell_arguments():
    'Parse the arguments'
    parser = OptionParser()

    parser.add_option('-u', '--username', action='store', type='string',
            dest='username', help='username', metavar='U', default='Anonymous')

    # Print information
    info = OptionGroup(parser, 'Print information')

    info.add_option('-v', '--verbose', action='store_true',
            dest='verbose', help='be extra verbose', default=False)

    info.add_option('-a', '--authors', action='callback',
            callback=show_authors, help='show authors')

    parser.add_option_group(info)
    return parser


if __name__ == 'savi2mkv':
    arg_parser = shell_arguments()
    (options, arguments) = arg_parser.parse_args()

    # Configure the logging module
    if options.verbose:
        level = logging.INFO
    else:
        level = logging.WARNING

    logging.basicConfig(level=level,
        format='%(asctime)s %(levelname)s: %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S')

# vim: ai ts=4 sts=4 et sw=4
